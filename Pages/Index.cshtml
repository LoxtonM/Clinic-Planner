@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="container">

    <div class="row mb-5 g-5"> @*Header only - appears if clinician and/or clinic selected*@
        <div class="col-md-2" id="holding"></div>
        @if (Model.clinicVenue != null)
        {
            <div class="col-md-5"><h1>@Model.clinicVenue.NAME</h1></div>
        }
        @if (Model.staffMember != null)
        {
            <div class="col-md-5"><h1>@Model.staffMember.NAME</h1></div>
        }
    </div>


    <form id="ClinicSelect">
        <div class="row mb-5 g-5" >
            <div class="col-md-2" align="right">
                <label>Week Commencing:</label> @*used to set the week view*@
            </div>
            <div class="col-md-4">
                <input type="button" value="&laquo;" id="wcBack" onclick="GoBack()"/><input id="wcDate" name="wcDt" type="date" asp-for=@Model.wcDate /><input type="button" id="wcNext" value="&raquo;" onclick="GoNext()" />
            </div>
        </div>
        
        <div class="row mb-5 g-5">
            <div class="col-md-1" align="right">
                <label>Clinician:</label>
            </div>
            <div class="col-md-2"> @*Clinician select*@
                <select id="ddlClinician" name="strClinician" asp-for=@Model.sClinician onchange="RefreshForm()">
                    @if (Model.staffMember != null)
                    {
                        <option value="@Model.staffMember" selected>@Model.staffMember.NAME</option>
                    }
                    else
                    {
                        <option value="" selected></option>
                    }
                    @if (Model.staffMemberList != null)
                    {
                        @foreach (var item in Model.staffMemberList)
                        {
                            <option value=@item.STAFF_CODE>@item.NAME</option>
                        }
                    }
                </select>
            </div>
            <div class="col-md-2" align="right">
                <label>Clinic:</label>
            </div>
            <div class="col-md-2"> @*Clinic select*@
                <select id="ddlClinic" name="strClinic" asp-for=@Model.sClinic onchange="RefreshForm()">
                    @if (Model.clinicVenue != null)
                    {
                        <option value="@Model.clinicVenue" selected>@Model.clinicVenue.NAME</option>
                    }
                    else
                    {
                        <option value="" selected></option>
                    }
                    @if (Model.clinicVenueList != null)
                    {
                        @foreach (var item in Model.clinicVenueList)
                        {
                            <option value=@item.FACILITY>@item.FACILITY - @item.NAME</option>
                        }
                    }
                </select>
            </div>
            <div class="col-md-3"></div>
            <div class="col-md-1" align="right">
                @*<input class="btn-success" type="submit" value="Select" />*@
            </div>
            <div class="col-md-1" align="right">
                <input class="btn-success" type="button" id="btnClear" value="Clear" onclick="Clear()" />
            </div>
        </div>
    </form>


    <div class="row">
    
        <div class="col-md-2">
            <form id="WaitingListForm" method="post">
                <div class="row mb-5 g-5">
                    <h2>Waiting List</h2>
                </div>

                <div class="row mb-2 g-2">
                    <p>Search by CGU Number:</p>
                    <div class="col-6">
                        <input class="w-100" name="sSearchTerm" />
                    </div>
                    <div class="col-6">
                        <button class="btn-success w-50 h-100" type="button" id="btnSearchWL" onclick="WaitingListSearch()">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
                                <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0" />
                            </svg>
                        </button>
                    </div>
                </div>
                <br /><br /><br />
                <div class="row mb-5 g-5">
                    <p>Double-click to modify waiting list entry</p>
                </div>
            
                <div class="row mb-5 g-5">
                    <input class="btn-success" type="button" id="btnAddWL" value="Add Patient to WL" onclick="AddToWL()"/>
                </div>
                @if (Model.waitingList != null)
                {
                    @foreach (var item in Model.waitingList)
                    {                
                        <div class="row" id=@item.MPI style="border:solid;background-color:darkcyan;color:ivory" draggable="true" ondragstart="OnDragStart(event)" ondragend="OnDragEnd(@item.MPI, event)" ondblclick="OnDoubleClickWL(@item.MPI, '@item.ClinicID', '@item.ClinicianID')">
                            <div>@item.FIRSTNAME @item.LASTNAME</div>
                            <div>@item.CGU_No</div>
                            <div>@item.ClinicianID</div>
                            <div>@item.ClinicID</div>
                            @if (item.Duration != null)
                            {
                                <div>@item.Duration mins</div>
                            }
                        </div>
                    }
                }
            </form>
        </div>
    
        <div class="col-md-10">
            <form id="ClinicForm" method="post">
                <table id="ClinicMatrix" class="table table-bordered">
                    <thead>
                        <th>Time:</th>
                        <th>Monday @Model.DateArray[0].ToString("dd/MM/yyyy")</th>
                        <th>Tuesday @Model.DateArray[1].ToString("dd/MM/yyyy")</th>
                        <th>Wednesday @Model.DateArray[2].ToString("dd/MM/yyyy")</th>
                        <th>Thursday @Model.DateArray[3].ToString("dd/MM/yyyy")</th>
                        <th>Friday @Model.DateArray[4].ToString("dd/MM/yyyy")</th>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.TimeArray)
                        {
                            <tr id=@item.ToString("HH:mm")>
                                <th scope="row">@item.ToString("HH:mm")</th>                            
                                <td id="@(@Model.DateArray[0].ToString("dd/MM/yyyy") + " " + @item.ToString("HH:mm"))" ondrop="OnDrop(event)" ondragover="OnDragOver(event)" ondragleave="OnDragLeave(event)" style="color:white" ondblclick="OnDoubleClickAP(id)"></td>
                                <td id="@(@Model.DateArray[1].ToString("dd/MM/yyyy") + " " + @item.ToString("HH:mm"))" ondrop="OnDrop(event)" ondragover="OnDragOver(event)" ondragleave="OnDragLeave(event)" style="color:white" ondblclick="OnDoubleClickAP(id)"></td>
                                <td id="@(@Model.DateArray[2].ToString("dd/MM/yyyy") + " " + @item.ToString("HH:mm"))" ondrop="OnDrop(event)" ondragover="OnDragOver(event)" ondragleave="OnDragLeave(event)" style="color:white" ondblclick="OnDoubleClickAP(id)"></td>
                                <td id="@(@Model.DateArray[3].ToString("dd/MM/yyyy") + " " + @item.ToString("HH:mm"))" ondrop="OnDrop(event)" ondragover="OnDragOver(event)" ondragleave="OnDragLeave(event)" style="color:white" ondblclick="OnDoubleClickAP(id)"></td>
                                <td id="@(@Model.DateArray[4].ToString("dd/MM/yyyy") + " " + @item.ToString("HH:mm"))" ondrop="OnDrop(event)" ondragover="OnDragOver(event)" ondragleave="OnDragLeave(event)" style="color:white" ondblclick="OnDoubleClickAP(id)"></td>
                            </tr>
                        }                
                    </tbody>
                </table>
            </form>       
        </div>
    </div>
</div>

<script>
    
    document.onload(LoadClinics());
    
    function AddToWL()
    {   
        window.open("AddToWL");
    }

    //Handles Next and Back buttons for the date selector
    function GoBack() //called by wcBack
    {        
        var date = new Date(document.getElementById("wcDate").value);
        date.setDate(date.getDate() - 7);
        document.getElementById("wcDate").value = date.toISOString().slice(0, 10);
        RefreshForm()
    }

    function GoNext() //called by wcNext
    {   
        var date = new Date(document.getElementById("wcDate").value);
        date.setDate(date.getDate() + 7);        
        document.getElementById("wcDate").value = date.toISOString().slice(0, 10);
        RefreshForm()
    }

    //Clear/reset the select menus
    function Clear() //called by btnClear
    {        
        document.getElementById("ddlClinician").value = ""
        document.getElementById("ddlClinic").value = ""
        RefreshForm()
    }

    function RefreshForm() 
    { 
        document.getElementById("ClinicSelect").submit();
    }
    
    //Drag-and-drop functionality
    function OnDragStart(ev)
    {  
        ev.dataTransfer.setData("text", ev.target.id);
        ev.currentTarget.style.backgroundColor = "yellow";
        ev.currentTarget.style.color = "black";
    }
    
    function OnDragEnd(iIntID, ev)
    {
        ev.currentTarget.style.backgroundColor = "darkcyan";
        ev.currentTarget.style.color = "ivory";
    }

    function OnDrop(ev)
    {
        ev.preventDefault();
        const id = ev.dataTransfer.getData("text");
        const draggableElement = document.getElementById(id);
        const dropzone = ev.target;
        
        if(ev.target.innerHTML.includes("Free"))
        {
            //substrings, substrings, and more substrings...
            const apDate = ev.target.id.slice(0,10);
            const apTime = ev.target.id.slice(11, 16);
            const apDur = ev.target.innerHTML.slice(7,9);
            const apClin = ev.target.innerHTML.slice(18, 22);
            const apVen = ev.target.innerHTML.slice(26, ev.target.innerHTML.length);
           
            const MPI = draggableElement.id;
            //this is necessary to make sure SQL doesn't render it into American
            const apDateProper = apDate.slice(6,10) + "-" + apDate.slice(3,5) + "-" + apDate.slice(0,2);
                 
            window.location.replace ("AppConfirm?sMPI=" + MPI + "&sClin=" + apClin + "&sVen=" + apVen + "&sDat=" + apDateProper + "&sTim=" + apTime + "&sDur=" + apDur);
            //document.getElementById("ClinicForm").submit();
        }        
    }
    //Sets highlight colours for drag/drop
    function OnDragOver(ev)
    {
       ev.preventDefault();
       
        if (ev.currentTarget.innerHTML.includes("Free")) 
        {
            ev.currentTarget.style.backgroundColor = "yellow";
            ev.currentTarget.style.color = "black";
        }       
    }

    function OnDragLeave(ev)
    {
        ev.preventDefault();

       if (ev.currentTarget.innerHTML.includes("Free")) 
       {
            ev.currentTarget.style.backgroundColor = "green";
            ev.currentTarget.style.color = "white";
       }       
    }

    //Double click functions (called by double-clicking on slots/appointments/waiting list entries)
    function OnDoubleClickWL(MPI, clinicID, clinicianID)
    {
        //window.open("WLModify?iMPI=" + MPI + "&sClinicianID=" + clinicianID + "&sClinicID=" + clinicID);
        window.location.replace("WLModify?iMPI=" + MPI + "&sClinicianID=" + clinicianID + "&sClinicID=" + clinicID);
    }

    function OnDoubleClickAP(id)
    {
        if (document.getElementById(id).innerHTML.includes("Booked"))
        {
            const str = document.getElementById(id).innerHTML;
            const sRID = str.slice(str.indexOf('R:') + 2);            
            
            //window.open("AppModify?sRefID=" + sRID);
            window.location.replace("AppModify?sRefID=" + sRID);
        }
        else if (document.getElementById(id).innerHTML.includes("Free"))
        {
            window.open("WIP");
        }
        else if (document.getElementById(id).innerHTML.includes("PAST")) 
        {
            window.alert("This is in the past, you cannot edit this.");            
        }
    }

    function WaitingListSearch() 
    { 
        document.getElementById("WaitingListForm").submit();
    }

    //Called at the start - sets the clinic matrix view
    function LoadClinics()
    {      
        var cMatrix = document.getElementById("ClinicMatrix");
        var timeArray = [];
        var dateArray = [];
        var durationArray = [];
        var clinicArray = [];
        var clinicianArray = [];
        var statusArray = [];
        var apptDateArray = [];
        var apptTimeArray = [];
        var apptDurationArray = [];
        var apptClinicArray = [];
        var apptClinicianArray = [];
        var apptOutcomeArray = [];
        var apptRefIDArray = [];
        var CGUNoArray = [];
        
        const today = new Date();
        today.setHours(0, 0, 0, 0);

        @if (Model.clinicSlotList != null) //set up all the clinic slots first
        {
            @foreach (var item in Model.clinicSlotList)
            {
                @:dateArray.push("@item.SlotDate");
                @:timeArray.push("@item.SlotTime");   
                @:durationArray.push("@item.duration");
                @:clinicArray.push("@item.ClinicID");
                @:clinicianArray.push("@item.ClinicianID");   
                @:statusArray.push("@item.SlotStatus");
                //we need to create the arrays like this because we can't access the data otherwise
            }
        }
                
        @if (Model.appointmentList != null) //then set up all the appointments
        {
        @foreach (var item in Model.appointmentList)
            {
                @:apptDateArray.push("@item.BOOKED_DATE");
                @:apptTimeArray.push("@item.BOOKED_TIME");
                @:apptDurationArray.push("@item.Duration");
                @:apptClinicArray.push("@item.Clinic");
                @:apptClinicianArray.push("@item.Clinician");
                @:CGUNoArray.push("@item.CGU_No");
                @:apptOutcomeArray.push("@item.Attendance");
                @:apptRefIDArray.push("@item.RefID");                
            }
        }

        //Display all the existing clinic slots
        if(dateArray.length == 0 && timeArray.length == 0)
        {
            return;
        }
        else
        {            
            //used to check if appointment is before today, later on
            for (var i = 0, row; row = cMatrix.rows[i]; i++) 
            {
                //loop through all rows to check times
                if (i > 0) 
                {
                    for (var j = 0, col; col = row.cells[j]; j++)
                    {
                        //loop through all columns to check dates
                        if (j > 0) 
                        {
                            var theDate = col.id.substring(0, 10);
                            var theTime = col.id.substring(11, col.id.length);
                            const colDate = new Date(theDate.substring(6, 10) + "-" + theDate.substring(3, 5) + "-" + theDate.substring(0, 2) + "T00:00:00");
                        
                            for (var k = 0; k < dateArray.length; k++)
                            {
                                const myDate = new Date(dateArray[k].substring(6, 10) + "-" + dateArray[k].substring(3, 5) + "-" + dateArray[k].substring(0, 2) + "T00:00:00");
                                //because JS has a weird way of storing dates, we need to get the two dates in the right format so we can compare
                                if(myDate.valueOf() == colDate.valueOf())
                                {
                                
                                    for (var l = 0; l < timeArray.length; l++)
                                    {                                        
                                        const myTime = timeArray[k].substring(11, 16);
                                        var strSlotDetail;
                                        if (myTime == theTime) 
                                        {
                                            if (colDate < today) //for clinic slots in the past
                                            {
                                                document.getElementById(col.id).style.backgroundColor = "firebrick";
                                                strSlotDetail = "PAST</br>" + clinicianArray[k] + "</br>" + clinicArray[k];
                                            }
                                            else
                                            {
                                                if (statusArray[k] == "Open") //for available slots
                                                {
                                                    document.getElementById(col.id).style.backgroundColor = "green";
                                                    strSlotDetail = "Free - " + durationArray[k].toString() + " mins</br>" + clinicianArray[k] + "</br>" + clinicArray[k];
                                                }
                                                else //for unavailable/reserved slots
                                                {
                                                    document.getElementById(col.id).style.backgroundColor = "firebrick";
                                                    strSlotDetail = statusArray[k] + " - " + durationArray[k].toString() + " mins</br>" + clinicianArray[k] + "</br>" + clinicArray[k];
                                                }
                                            }
                                            document.getElementById(col.id).innerHTML = strSlotDetail;
                                        }                                    
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        
        //now do the same but with the appointments
        if (apptDateArray.length != 0 && apptTimeArray.length != 0) 
        {
            for (var i = 0, row; row = cMatrix.rows[i]; i++) {
                if (i > 0) {
                    for (var j = 0, col; col = row.cells[j]; j++) {
                        if (j > 0) {
                            var theDate = col.id.substring(0, 10);
                            var theTime = col.id.substring(11, col.id.length);
                            const colDate = new Date(theDate.substring(6, 10) + "-" + theDate.substring(3, 5) + "-" + theDate.substring(0, 2) + "T00:00:00");

                            for (var k = 0; k < apptDateArray.length; k++) {
                                const myDate = new Date(apptDateArray[k].substring(6, 10) + "-" + apptDateArray[k].substring(3, 5) + "-" + apptDateArray[k].substring(0, 2) + "T00:00:00");

                                if (myDate.valueOf() == colDate.valueOf()) {

                                    for (var l = 0; l < apptTimeArray.length; l++) {
                                        const myTime = apptTimeArray[k].substring(11, 16);
                                        var strApptDetail;
                                        if (myTime == theTime) 
                                        {
                                            if (apptOutcomeArray[k] != "Declined" & apptOutcomeArray[k] != "Cancelled by patient" & apptOutcomeArray[k] != "Cancelled by professional")
                                            {
                                                //we have to do this here, because the C# throws a fit if we get nulls
                                                if (colDate < today)  //past appointments
                                                {
                                                    document.getElementById(col.id).style.backgroundColor = "purple";
                                                    strApptDetail = "PAST - " + apptDurationArray[k].toString() + " mins</br> " +
                                                    apptClinicianArray[k] + "</br> " + 
                                                    apptClinicArray[k] + "</br>" + 
                                                    //apptOutcomeArray[k] + "</br>R:" +
                                                    CGUNoArray[k] + "</br>R:" +
                                                    apptRefIDArray[k].toString();
                                                }
                                                else //current/future appointments
                                                {
                                                    document.getElementById(col.id).style.backgroundColor = "blue";
                                                    strApptDetail = "Booked - " + apptDurationArray[k].toString() + " mins</br> " +
                                                    apptClinicianArray[k] + "</br> " + 
                                                    apptClinicArray[k] + "</br>" + 
                                                    //apptOutcomeArray[k] + "</br>R:" +
                                                    CGUNoArray[k] + "</br>R:" +
                                                    apptRefIDArray[k].toString();
                                                }
                                                document.getElementById(col.id).innerHTML = strApptDetail;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            
        }
        
        //finally, hide all empty rows        
        for (var i = 0, row; row = cMatrix.rows[i]; i++) 
        {
            var colcount = 0
            if (i > 0) 
            {
                for (var j = 0, col; col = row.cells[j]; j++) 
                {
                    if (j > 0) 
                    {
                        if(col.innerHTML == "")
                        {
                            colcount ++;
                        }
                    }
                }
                if(colcount>=5)
                {
                    row.hidden = true;
                }
            }
        }        
    }
    


</script>